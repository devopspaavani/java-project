pipeline {
  agent none
  
  environment {
    MAJOR_VERSION = 1
  }
  
  stages {
    stage('Unit Tests'){
      agent {
        label 'jslave'
      }
      steps {
        sh 'ant -f test.xml -v'
        junit 'reports/result.xml'
      }
    }
    stage('build'){
      agent {
        label 'jslave'
      }
      steps {
        sh 'ant -f build.xml -v'      
      }
      post {
        success {
          archiveArtifacts artifacts: 'dist/*.jar', fingerprint: true
        }
      }
    }
    stage('deploy'){
      agent {
        label 'jslave'
      }
      steps {
        sh "if ![ -d '/var/www/html/rectangles/all/${env.BRANCH_NAME}' ]; then mkdir /var/www/html/rectangles/all/${env.BRANCH_NAME}; fi"
        sh "cp dist/rectangle_rectangle_${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar /var/www/html/rectangles/all/${env.BRANCH_NAME}/"      
      }
    }
    stage("Running on CentOS") {
      agent {
        label 'CentOS'
      }
      steps {
        sh "wget vagrant@jslave.example.com/rectangles/all/${env.BRANCH_NAME}/rectangle_${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar"
        sh "java -jar rectangle_${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar 6 4"
      }
    }
    stage('Promote to Green'){
      agent {
        label 'jslave'
      }
      when {
        branch 'master'
      }
      steps{
        sh "cp -r /var/www/html/rectangles/all/rectangle_${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar /var/www/html/rectangles/green/rectangle_${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar"
      }
    } 
    stage('Promote Development Branch to Master') {
      agent {
        label 'jslave'
      }
      when {
        branch 'development'
      }
      steps {
        echo "Stashing Any Local Changes"  
        sh 'git stash'
        echo "Checking Out Development"
        sh 'git checkout development'
        echo "Checking Out Master Branch"
        sh 'git pull origin'
        sh 'git checkout master'
        echo "Merging Development into MasterBranch"
        sh 'git merge development'
        echo "Pushing to Origin Master"
        sh 'git push origin master'
        echo 'Tagging the Release'
        sh 'git tag rectangle-${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar '
        sh 'git push origin rectangle-${env.MAJOR_VERSION}.${env.BUILD_NUMBER}.jar'
      }
    }
  }
}